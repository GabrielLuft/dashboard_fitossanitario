import streamlit as st
import pandas as pd
import numpy as np
import plotly.express as px
from datetime import datetime, timedelta

st.set_page_config(page_title="Dashboard Fitossanit√°rio para Videiras", layout="wide")

# Estilo renovado: mais moderno, profissional e com imagens
st.markdown("""
    <style>
    body {
        background-color: #f4f6f9;
        color: #1c1c1e;
        font-family: 'Segoe UI', sans-serif;
    }
    .block-container {
        padding: 2rem;
    }
    .stTabs [data-baseweb="tab"] {
        background-color: #ffffff;
        border-radius: 10px;
        margin: 0 0.5rem;
        padding: 1rem;
        border: 1px solid #ddd;
    }
    .stTabs [data-baseweb="tab"]:hover {
        background-color: #e6f7ff;
    }
    .stTabs [aria-selected="true"] {
        background-color: #cce5ff;
        border-bottom: 4px solid #1e88e5;
    }
    </style>
""", unsafe_allow_html=True)

st.image("https://images.unsplash.com/photo-1600694322840-e50ec0fd1d6f", caption="Monitoramento fitossanit√°rio em tempo real", use_column_width=True)

# Abas principais
tabs = st.tabs([
    "üè† Vis√£o Geral T√©cnica",
    "üå¶Ô∏è Clima Atual",
    "üí® Janela de Pulveriza√ß√£o",
    "ü¶† Risco de Doen√ßas",
    "üìÑ Aplica√ß√µes & Hist√≥rico",
    "üìä An√°lises T√©cnicas",
    "üìò Guia T√©cnico & Suporte"
])

# Aba 1: Vis√£o Geral T√©cnica
with tabs[0]:
    st.title("üè† Diagn√≥stico Integrado da Lavoura")
    col1, col2 = st.columns(2)
    with col1:
        st.metric("√öltima Pulveriza√ß√£o", "10/07/2025")
        st.metric("Risco Atual - M√≠ldio", "Alto", delta="+25%")
    with col2:
        st.success("Situa√ß√£o Geral: Aten√ß√£o")

    st.markdown("""
    Painel inteligente com base em clima, doen√ßa e manejo recente:
    - Alertas automatizados
    - Cards com recomenda√ß√µes r√°pidas
    - An√°lise integrada por talh√£o e produto
    """)
    st.image("https://images.unsplash.com/photo-1615911542565-5d8b4d32c56a", caption="Status atual da lavoura", use_column_width=True)

# Aba 2: Clima Atual
with tabs[1]:
    st.title("üå¶Ô∏è Monitoramento Clim√°tico - 7 Dias")
    dias = pd.date_range(datetime.today(), periods=7)
    clima_df = pd.DataFrame({
        'Data': dias,
        'Chuva (mm)': np.random.randint(0, 30, size=7),
        'Temperatura (¬∞C)': np.random.uniform(15, 30, size=7),
        'Vento (km/h)': np.random.uniform(2, 15, size=7),
        'Umidade (%)': np.random.uniform(60, 95, size=7)
    })

    st.markdown("""
    Condi√ß√µes meteorol√≥gicas dos pr√≥ximos dias para tomada de decis√£o agron√¥mica.
    """)
    st.line_chart(clima_df.set_index("Data"))

# Aba 3: Janela de Pulveriza√ß√£o
with tabs[2]:
    st.title("üí® Janela Ideal para Pulveriza√ß√£o")
    st.markdown("""
    Avalia√ß√£o t√©cnica dos hor√°rios mais seguros para aplica√ß√£o considerando:
    - Velocidade do vento
    - Previs√£o de chuva
    - Efici√™ncia estimada da calda
    """)

    horas = [f"{h}:00" for h in range(6, 19)]
    vento = np.random.uniform(1, 12, len(horas))
    chuva_chance = np.random.uniform(0, 0.6, len(horas)) * 100

    janela_df = pd.DataFrame({
        'Hora': horas,
        'Velocidade do Vento (km/h)': vento,
        'Chance de Chuva (%)': chuva_chance
    })

    fig = px.line(janela_df, x='Hora', y='Velocidade do Vento (km/h)', markers=True)
    fig.add_scatter(x=janela_df['Hora'], y=janela_df['Chance de Chuva (%)'], mode='lines+markers', name='Chuva (%)')
    st.plotly_chart(fig, use_container_width=True)

# Aba 4: Doen√ßas
with tabs[3]:
    st.title("ü¶† Modelos Epidemiol√≥gicos de Risco")
    risco = np.clip(np.random.normal(60, 20, 7), 0, 100)
    fig2 = px.area(x=dias, y=risco, title="Risco de Infec√ß√£o por Botrytis", labels={'x': 'Data', 'y': 'Risco (%)'})
    st.plotly_chart(fig2, use_container_width=True)

# Aba 5: Aplica√ß√µes
with tabs[4]:
    st.title("üìÑ Hist√≥rico de Aplica√ß√µes e Efici√™ncia")
    aplicacoes = pd.DataFrame({
        'Data': pd.date_range("2025-06-20", periods=4),
        'Produto': ['Cobre', 'Isaria', 'Trichoderma', 'Captan'],
        'Doen√ßa Alvo': ['M√≠ldio', 'Botrytis', 'O√≠dio', 'M√≠ldio'],
        'Efic√°cia (%)': [75, 88, 92, 70]
    })
    st.dataframe(aplicacoes)
    st.bar_chart(aplicacoes.set_index("Data")["Efic√°cia (%)"])

# Aba 6: An√°lises T√©cnicas
with tabs[5]:
    st.title("üìä Avalia√ß√£o de Produtos e Clima")
    st.markdown("""
    Compara√ß√£o entre produtos, varia√ß√µes clim√°ticas e surtos por safra:
    - Exporta√ß√£o de relat√≥rios
    - √çndice de Efici√™ncia T√©cnica (IET)
    - Comparativo de talh√µes e fases
    """)

# Aba 7: Guia T√©cnico
with tabs[6]:
    st.title("üìò Manual e Suporte T√©cnico")
    st.markdown("""
    > üß† **Como usar o dashboard:**
    - Navegue entre abas para visualizar clima, doen√ßas e hist√≥rico
    - Clique nos √≠cones ‚ÑπÔ∏è para entender cada gr√°fico
    - Ajuste o modo para t√©cnico ou produtor (em breve)
    
    Em breve:
    - V√≠deos explicativos
    - Diagn√≥stico visual por imagem
    - Chatbot agron√¥mico para d√∫vidas
    """)